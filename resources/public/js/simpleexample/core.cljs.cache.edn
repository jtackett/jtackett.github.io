;; Analyzed by ClojureScript 0.0-3208
{:use-macros {reaction reagent.ratom}, :excludes #{}, :name simpleexample.core, :imports nil, :requires {re-com.core re-com.core, cljs.reader cljs.reader, re-frame.core re-frame.core, reagent.core reagent.core, reagent reagent.core}, :uses {horizontal-pill-tabs re-com.core, h-box re-com.core, atom reagent.core, subscribe re-frame.core, input-textarea re-com.core, register-sub re-frame.core, path re-frame.core, progress-bar re-com.core, dispatch-sync re-frame.core, input-text re-com.core, scroller re-com.core, checkbox re-com.core, button re-com.core, box re-com.core, info-button re-com.core, title re-com.core, v-box re-com.core, horizontal-bar-tabs re-com.core, dispatch re-frame.core, read-string cljs.reader, md-icon-button re-com.core, label re-com.core, input-time re-com.core, gap re-com.core, throbber re-com.core, datepicker-dropdown re-com.core, register-handler re-frame.core, hyperlink re-com.core}, :defs {decimal? {:protocol-inline nil, :meta {:arglists (quote ([d])), :end-column 15, :end-line 36, :column 7, :line 36, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/decimal?, :variadic false, :file "src/simpleexample/core.cljs", :end-column 15, :method-params ([d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([d])), :test true}, rules-of-thumb-input {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 27, :end-line 502, :column 7, :line 502, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/rules-of-thumb-input, :variadic false, :file "src/simpleexample/core.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 502, :end-line 502, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, initial-state {:meta {:end-column 19, :end-line 54, :column 6, :line 54, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :file "src/simpleexample/core.cljs", :line 54, :column 1, :end-line 54, :end-column 19, :test true, :name simpleexample.core/initial-state}, greeting {:protocol-inline nil, :meta {:arglists (quote ([message])), :end-column 15, :end-line 549, :column 7, :line 549, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/greeting, :variadic false, :file "src/simpleexample/core.cljs", :end-column 15, :method-params ([message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 549, :end-line 549, :max-fixed-arity 1, :fn-var true, :arglists (quote ([message])), :test true}, simple-input {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 5, :method-params [(t sym message sub k suggestion-sub)], :arglists [[t sym message sub k & suggestion-sub]], :arglists-meta (nil)}, :arglists (quote ([t sym message sub k & suggestion-sub])), :end-column 19, :end-line 285, :column 7, :line 285, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/simple-input, :variadic true, :file "src/simpleexample/core.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 5, :method-params [(t sym message sub k suggestion-sub)], :arglists [[t sym message sub k & suggestion-sub]], :arglists-meta (nil)}, :method-params [(t sym message sub k suggestion-sub)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 285, :end-line 285, :max-fixed-arity 5, :fn-var true, :arglists [[t sym message sub k & suggestion-sub]], :test true}, footer-navigation {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 24, :end-line 561, :column 7, :line 561, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/footer-navigation, :variadic false, :file "src/simpleexample/core.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 561, :end-line 561, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, login-form {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 17, :end-line 591, :column 7, :line 591, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/login-form, :variadic false, :file "src/simpleexample/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 591, :end-line 591, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, simple-display {:protocol-inline nil, :meta {:arglists (quote ([t sym message sub k])), :end-column 21, :end-line 333, :column 7, :line 333, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/simple-display, :variadic false, :file "src/simpleexample/core.cljs", :end-column 21, :method-params ([t sym message sub k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 333, :end-line 333, :max-fixed-arity 5, :fn-var true, :arglists (quote ([t sym message sub k])), :test true}, run {:protocol-inline nil, :meta {:arglists (quote ([])), :export true, :end-column 19, :end-line 712, :column 16, :line 712, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/run, :variadic false, :file "src/simpleexample/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 712, :end-line 712, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, input-with-suggestion {:protocol-inline nil, :meta {:arglists (quote ([t sym message sub k suggestion-sub])), :end-column 28, :end-line 350, :column 7, :line 350, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/input-with-suggestion, :variadic false, :file "src/simpleexample/core.cljs", :end-column 28, :method-params ([t sym message sub k suggestion-sub]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 350, :end-line 350, :max-fixed-arity 6, :fn-var true, :arglists (quote ([t sym message sub k suggestion-sub])), :test true}, make-sub {:protocol-inline nil, :meta {:arglists (quote ([k])), :end-column 15, :end-line 188, :column 7, :line 188, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/make-sub, :variadic false, :file "src/simpleexample/core.cljs", :end-column 15, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 188, :end-line 188, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k])), :test true}, rules-of-thumb {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 21, :end-line 656, :column 7, :line 656, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/rules-of-thumb, :variadic false, :file "src/simpleexample/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 656, :end-line 656, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, property-data-input {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 26, :end-line 371, :column 7, :line 371, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/property-data-input, :variadic false, :file "src/simpleexample/core.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 371, :end-line 371, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, make-handler {:protocol-inline nil, :meta {:arglists (quote ([k])), :end-column 19, :end-line 166, :column 7, :line 166, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/make-handler, :variadic false, :file "src/simpleexample/core.cljs", :end-column 19, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 166, :end-line 166, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k])), :test true}, investment-calculator {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 28, :end-line 644, :column 7, :line 644, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/investment-calculator, :variadic false, :file "src/simpleexample/core.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 644, :end-line 644, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, login {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 12, :end-line 663, :column 7, :line 663, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/login, :variadic false, :file "src/simpleexample/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 663, :end-line 663, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, contact-us {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 17, :end-line 637, :column 7, :line 637, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/contact-us, :variadic false, :file "src/simpleexample/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 637, :end-line 637, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, avoid-nil {:protocol-inline nil, :meta {:arglists (quote ([s])), :end-column 16, :end-line 49, :column 7, :line 49, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/avoid-nil, :variadic false, :file "src/simpleexample/core.cljs", :end-column 16, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, simple-example {:protocol-inline nil, :meta {:arglists (quote ([])), :doc "This is the framework for the app.\n  The condp along with the nav-panel key in the @db\n  provide a nice navigation/routing framework\n  while building within a singlepage application", :end-column 21, :end-line 675, :column 7, :line 675, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/simple-example, :variadic false, :file "src/simpleexample/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 675, :end-line 675, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "This is the framework for the app.\n  The condp along with the nav-panel key in the @db\n  provide a nice navigation/routing framework\n  while building within a singlepage application", :test true}, check-login-page {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 23, :end-line 617, :column 7, :line 617, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/check-login-page, :variadic false, :file "src/simpleexample/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 617, :end-line 617, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, check-login {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 18, :end-line 670, :column 7, :line 670, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/check-login, :variadic false, :file "src/simpleexample/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 670, :end-line 670, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, string->currency {:protocol-inline nil, :meta {:arglists (quote ([s])), :end-column 23, :end-line 40, :column 7, :line 40, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/core.cljs"}, :name simpleexample.core/string->currency, :variadic false, :file "src/simpleexample/core.cljs", :end-column 23, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}}, :require-macros {reagent.ratom reagent.ratom}, :cljs.analyzer/constants {:order [:nav-panel :password :search-term :username :expense-percent :down-payment-percent :purchase-discount :check-login :procedure-code :procedure-info :monthly-rent-percent :investment-calculator :initialize :logout :suggested-purchase-price :property-value :repair-costs :suggested-down-payment :purchase-price :monthly-rent :expenses :monthly-mortgage :down-payment :interest-rate :mortgage-term-years :cashflow :gap :children :label :style :font-size :info :width :padding-right :input :type :value :on-change :height :border :border-width :border-radius :border-color :box-shadow :margin-right :margin-left :underline? :margin-top :color :text-shadow :padding-left :div :div.center.banner :font-family :br :position :bottom :max-width :min-width :button.trim.nav :on-click :background-color :rules-of-thumb :div.login :h1 :button.small :h4.footer], :seen #{:min-width :interest-rate :children :suggested-down-payment :suggested-purchase-price :box-shadow :color :div.login :bottom :nav-panel :font-size :password :monthly-mortgage :search-term :rules-of-thumb :expenses :logout :margin-left :value :background-color :username :cashflow :margin-top :width :property-value :type :repair-costs :underline? :expense-percent :max-width :padding-right :on-click :investment-calculator :button.small :style :div :initialize :purchase-price :border-width :down-payment :down-payment-percent :padding-left :label :button.trim.nav :purchase-discount :gap :info :check-login :text-shadow :monthly-rent :border-color :position :br :mortgage-term-years :input :h4.footer :margin-right :procedure-code :h1 :on-change :border :border-radius :div.center.banner :font-family :height :procedure-info :monthly-rent-percent}}, :doc nil}