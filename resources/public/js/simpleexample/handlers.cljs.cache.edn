;; Analyzed by ClojureScript 0.0-3208
{:use-macros nil, :excludes #{}, :name simpleexample.handlers, :imports nil, :requires {re-frame.core re-frame.core, reagent.core reagent.core, reagent reagent.core}, :uses {atom reagent.core, subscribe re-frame.core, register-sub re-frame.core, path re-frame.core, dispatch-sync re-frame.core, dispatch re-frame.core, register-handler re-frame.core}, :defs {initial-state {:meta {:end-column 19, :end-line 10, :column 6, :line 10, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/handlers.cljs"}, :file "src/simpleexample/handlers.cljs", :line 10, :column 1, :end-line 10, :end-column 19, :test true, :name simpleexample.handlers/initial-state}}, :require-macros nil, :cljs.analyzer/constants {:order [:timer :time-color :procedure-code :procedure-info :procedure-db :code :name :description :related :higher-paid :initialize], :seen #{:description :higher-paid :procedure-db :timer :name :related :initialize :code :time-color :procedure-code :procedure-info}}, :doc nil}