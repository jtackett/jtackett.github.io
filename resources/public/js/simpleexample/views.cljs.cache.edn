;; Analyzed by ClojureScript 0.0-3208
{:use-macros nil, :excludes #{}, :name simpleexample.views, :imports nil, :requires {re-frame.core re-frame.core, reagent.core reagent.core, reagent reagent.core}, :uses {atom reagent.core, subscribe re-frame.core, register-sub re-frame.core, path re-frame.core, dispatch-sync re-frame.core, dispatch re-frame.core, register-handler re-frame.core}, :defs {simple-example {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 21, :end-line 71, :column 7, :line 71, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/views.cljs"}, :name simpleexample.views/simple-example, :variadic false, :file "src/simpleexample/views.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, procedure-info {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 21, :end-line 59, :column 7, :line 59, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/views.cljs"}, :name simpleexample.views/procedure-info, :variadic false, :file "src/simpleexample/views.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, procedure-code-input {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 27, :end-line 46, :column 7, :line 46, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/views.cljs"}, :name simpleexample.views/procedure-code-input, :variadic false, :file "src/simpleexample/views.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, color-input {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 18, :end-line 33, :column 7, :line 33, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/views.cljs"}, :name simpleexample.views/color-input, :variadic false, :file "src/simpleexample/views.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, clock {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 12, :end-line 18, :column 7, :line 18, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/views.cljs"}, :name simpleexample.views/clock, :variadic false, :file "src/simpleexample/views.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, greeting {:protocol-inline nil, :meta {:arglists (quote ([message])), :end-column 15, :end-line 13, :column 7, :line 13, :file "/Users/jtackett/Desktop/Real-estate-investment-app/src/simpleexample/views.cljs"}, :name simpleexample.views/greeting, :variadic false, :file "src/simpleexample/views.cljs", :end-column 15, :method-params ([message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([message])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:h1 :time-color :timer :style :color :div.example-clock :div.color-input :input :type :value :on-change :procedure-code :procedure-info :div], :seen #{:div.example-clock :color :timer :value :type :style :div :input :time-color :procedure-code :div.color-input :h1 :on-change :procedure-info}}, :doc nil}